name: CI workflow

on: [push, pull_request]

jobs:
  pre-commit:
    name: Run pre-commit checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: pre-commit/action@v2.0.0

  tests:
    name: Jest tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install nektos/act
        run: curl https://raw.githubusercontent.com/nektos/act/master/install.sh | sudo bash -s -- v0.2.20
      - uses: actions/setup-node@v2.1.5
        with:
          node-version: 14
      - run: npm install
      - name: Run Jest tests
        run: npm test
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Upload coverage information
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: coverage/

  sonarcloud:
    runs-on: ubuntu-latest
    name: SonarCloud
    needs: [tests]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Download coverage information
        uses: actions/download-artifact@v2
        with:
          name: coverage
          path: coverage/
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  integration-default:
    name: Integration tests - default
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ca-central-1
      - name: Invoke "taskcat test run"
        uses: ./
        with:
          commands: test run --project-root ./e2e/resources/default

  integration-update:
    name: Integration tests - update taskcat
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ca-central-1
      - name: Invoke "taskcat test run"
        uses: ./
        with:
          commands: test run --project-root ./e2e/resources/default
          update_taskcat: true

  integration-lint-update:
    name: Integration tests - update taskcat
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ca-central-1
      - name: Invoke "taskcat test run"
        uses: ./
        with:
          commands: test run --project-root ./e2e/resources/default
          update_taskcat: true
          update_cfn_lint: true

  vale:
    name: Run Vale
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: errata-ai/vale-action@v1.3.0
        with:
          debug: true
          files: '[ "README.md", "vale/README.md", "src/", "e2e/", "docs/", "__tests__/" ]'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: Create release
    runs-on: ubuntu-latest
    needs:
      [
        pre-commit,
        tests,
        integration-default,
        integration-update,
        integration-lint-update,
        vale,
      ]
    if: ${{ needs.pre-commit.result == 'success' && needs.tests.result == 'success' && needs.integration-default.result == 'success' && needs.integration-update.result == 'success' && needs.integration-lint-update.result == 'success' && needs.vale.result == 'success' }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.1.5
        with:
          node-version: 12
      - name: Release
        run: npx semantic-release
